name: Cerberus

on: [pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 21.6.1

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npm run lint

      - name: Run unit tests
        run: npm run test:cov

  e2e:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 90 # Increased timeout
    strategy:
      fail-fast: false
      matrix:
        api-level: [33]
        target: [google_apis_playstore, google_apis]
        arch: [x86_64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 21.6.1

      - name: Install dependencies
        run: npm install

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Maestro
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      - name: Verify Maestro Installation
        run: maestro --version

      - name: Build Debug APK
        run: |
          npm run prebuild:android
          cd android
          ./gradlew assembleDebug
          cd ..

      - name: Install and start Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          profile: Nexus 6
          ram-size: 4096M
          disk-size: 8192M
          cores: 2
          emulator-boot-timeout: 900 # 15 minutes
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          pre-emulator-launch-script: |
            echo "Running pre-emulator launch script..."
            echo "Working directory:"
            pwd
            echo "Environment info:"
            npx envinfo
          script: |
            # Wait for emulator to come online
            echo "Waiting for emulator to come online..."
            until adb devices | grep -q 'emulator-5554'; do
              echo "Emulator not online yet. Retrying in 5 seconds..."
              sleep 5
            done

            # Wait for boot to complete
            echo "Waiting for emulator to boot..."
            adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'

            # Disable animations
            echo "Disabling animations..."
            adb shell settings put global window_animation_scale 0
            adb shell settings put global transition_animation_scale 0
            adb shell settings put global animator_duration_scale 0

            # Additional wait to ensure device is fully ready
            echo "Waiting for device to be fully ready..."
            sleep 30

            # Show device status
            echo "Device status:"
            adb devices -l

            # Install app (retry if necessary)
            echo "Installing app..."
            if ! adb install app-release.apk; then
              echo "Failed to install app. Restarting adb server and retrying..."
              adb kill-server
              adb start-server
              adb devices
              adb install app-release.apk || { echo "App installation failed after retry. Exiting..."; exit 1; }
            fi

            # Run E2E tests
            echo "Running E2E tests..."
            npm run test:e2e

      - name: Debug Emulator Logs
        run: |
          echo "Emulator logs:"
          adb logcat -d
          echo "Emulator configuration:"
          cat ~/.android/avd/test.avd/config.ini

  build:
    needs: [test, e2e]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 21.6.1

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: üèó Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm install

      - name: Prebuild
        run: npm run prebuild:android

      - name: Build
        run: npm run build:android:local --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
#
#  smoke-tests:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v2
#        with:
#          node-version: 14
#
#      - name: Install dependencies
#        run: yarn install
#
#      - name: Run smoke tests
#        run: yarn test:smoke
#
#  deploy:
#    needs: smoke-tests
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v2
#        with:
#          node-version: 14
#
#      - name: Install dependencies
#        run: yarn install
#
#      - name: Deploy
#        run: yarn deploy
